[options]
mode prove
depth 8

[engines]
smtbmc yices

[script]
--pycode-begin--
early_log(workdir, "Verifying module: {}".format(taskname))
if taskname in ("and2", "demux4", "dff", "dffe", "mux2", "mux4", "mux8", "nor2", "nor4", "or2", "xor2"):
    output("read -formal -sv cells/{}.sv".format(taskname))
else:
    output("read -formal -sv {}.sv".format(taskname))
output("prep -top {}".format(taskname))
--pycode-end--

[tasks]
core
program_counter
memory
instruction_decode
register_file
alu
adder4
adder32
shifter
and2
mux2
mux4
mux8
demux4
dff
dffe
or2
nor2
nor4
xor2
csr
fsm

[files]
verilog/core.sv
verilog/program_counter.sv
verilog/memory.sv
verilog/instruction_decode.sv
verilog/register_file.sv
verilog/alu.sv
verilog/adder4.sv
verilog/adder32.sv
verilog/shifter.sv
cells/and2.sv verilog/cells/and2.sv
cells/or2.sv verilog/cells/or2.sv
cells/nor2.sv verilog/cells/nor2.sv
cells/nor4.sv verilog/cells/nor4.sv
cells/mux2.sv verilog/cells/mux2.sv
cells/mux4.sv verilog/cells/mux4.sv
cells/mux8.sv verilog/cells/mux8.sv
cells/demux4.sv verilog/cells/demux4.sv
cells/dff.sv verilog/cells/dff.sv
cells/dff_stages.sv verilog/cells/dff_stages.sv
cells/dffe.sv verilog/cells/dffe.sv
cells/xor2.sv verilog/cells/xor2.sv
verilog/csr.sv
verilog/fsm.sv
verilog/stages.sv
